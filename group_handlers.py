# handlers/group_handlers.py
import aiohttp
from aiogram import Router, types, F, Bot
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

import config
from database import Database
from utils import send_long_message
from .utils import execute_chat_request

group_router = Router()

group_router.message.filter(F.chat.type.in_({'group', 'supergroup'}))

@group_router.message(Command('start', 'new'))
async def group_start_redirect(message: types.Message, bot: Bot, user_level: int):
    if user_level == 0:
        await message.reply(
            "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º –≤ –≥—Ä—É–ø–ø–∞—Ö –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–¥–ø–∏—Å–∫–æ–π. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º."
        )
        return

    bot_info = await bot.get_me()
    bot_username = bot_info.username
    url = f"https://t.me/{bot_username}?start=1"
    
    text = (
        "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ–Ω—é –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, "
        "–ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç —Å–æ –º–Ω–æ–π. –í –≥—Ä—É–ø–ø–∞—Ö —è –æ—Ç–≤–µ—á–∞—é —Ç–æ–ª—å–∫–æ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã "
        f"—á–µ—Ä–µ–∑ —Ç—Ä–∏–≥–≥–µ—Ä `{config.GROUP_TRIGGER}`."
    )
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç", url=url)]
    ])
    
    await message.reply(text, reply_markup=keyboard)


@group_router.message(F.text.startswith(config.GROUP_TRIGGER))
async def handle_group_trigger(message: types.Message, bot: Bot, db: Database, user_level: int):
    if user_level == 0:
        await message.reply(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–∞—Ö –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–ª–∞—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π (Standard –∏–ª–∏ Premium). "
            "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –µ–µ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º."
        )
        return

    try:
        _, prompt = message.text.split(maxsplit=1)
    except ValueError:
        await message.reply(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ `{config.GROUP_TRIGGER}`.")
        return
        
    user_id = message.from_user.id
    model_name = await db.get_last_selected_model(user_id) or config.DEFAULT_GROUP_MODEL
    notification = ""
    if not await db.get_last_selected_model(user_id):
        notification = f"–í—ã –µ—â–µ –Ω–µ –≤—ã–±–∏—Ä–∞–ª–∏ –º–æ–¥–µ–ª—å –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É—é –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: `{model_name}`\n\n"
    
    msg = await message.reply("üß† –î—É–º–∞—é...")

    # –í –≥—Ä—É–ø–ø–∞—Ö –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
    payload = {
        'model': model_name,
        'messages': [{'role': 'user', 'content': prompt}],
        'temperature': config.DEFAULT_TEMPERATURE
    }

    async with aiohttp.ClientSession() as session:
        answer_text, api_error = await execute_chat_request(session, payload)

    await msg.delete()

    if answer_text:
        if user_id not in config.ADMIN_IDS:
            await db.add_request(user_id, model_name)
        
        final_text = f"{notification}<b>–ú–æ–¥–µ–ª—å: {model_name}</b>\n\n{answer_text}"
        await send_long_message(bot, message.chat.id, final_text)
    else:
        error_text = f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞: {api_error}" if user_id in config.ADMIN_IDS else "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        await message.reply(error_text)


@group_router.message(Command('help'))
async def group_help(message: types.Message):
    text = (
        f"–Ø –æ—Ç–≤–µ—á–∞—é –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä—É `{config.GROUP_TRIGGER}`.\n\n"
        "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫, "
        "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ."
    )
    await message.reply(text)